" VIM Syntax file for txr
" Kaz Kylheku <kaz@kylheku.com>

" INSTALL-HOWTO:
"
" 1. Create the directory .vim/syntax in your home directory and
"    put this file there.
" 2. In your .vimrc, add this command to associate *.txr files
"    with the txr filetype.
"    :au BufRead,BufNewFile *.txr set filetype=txr | set lisp
"
" If you want syntax highlighting to be on automatically (for any language)
" you need to add ":syntax on" in your .vimrc also. But you knew that already!
"
" This file is generated by the genvim.txr script in the TXR source tree.

syn case match
syn spell toplevel

setlocal iskeyword=a-z,A-Z,48-57,!,$,&,*,+,-,<,=,>,?,\\,_,~,^

syn keyword txr_keyword contained accept all bind block cases cat choose close coll collect defex deffilter define do eof eol fail filter flatten forget freeform fuzz gather load local maybe merge next none output rebind repeat require set skip some text throw trailer try var
syn keyword txl_keyword contained * *keyword-package* *random-state* *self-path* *stddebug* *stderr* *stdin* *stdout* *system-package* *user-package* + - / /= < <= = > >= abs acons acons-new aconsql-new acos alist-nremove alist-remove all and andf append append* apply ash asin assoc assql atan atom bignump block break-str call car cat-str cat-vec catch cdr ceil chain chr-isalnum chr-isalpha chr-isascii chr-iscntrl chr-isdigit chr-isgraph chr-islower chr-isprint chr-ispunct chr-isspace chr-isupper chr-isxdigit chr-num chr-str chr-str-set chr-tolower chr-toupper chrp close-stream collect_each collect_each_star compl-span-str cond cons consp copy-alist copy-cons copy-hash copy-list copy-str copy-vec cos dec defun defvar del delete-package dohash downcase-str dwim each each_star eq eql equal error eval evenp exp expt exptmod fifth find find-if find-package first fixnump flatten flatten* flip flo-int flo-str floatp floor flush-stream for for_star force format fourth fun func-get-env func-get-form functionp gcd generate gensym get-byte get-char get-hash-userdata get-line get-list-from-stream get-string-from-stream gethash hash hash-alist hash-construct hash-count hash-diff hash-eql hash-equal hash-isec hash-keys hash-pairs hash-uni hash-values hashp identity if iff iffi inc int-flo int-str integerp intern interp-fun-p isqrt keep-if keep-if* keywordp lambda lazy-str lazy-str-force lazy-str-force-upto lazy-str-get-trailing-list lazy-stream-cons lazy-stringp lcons-fun ldiff length length-list length-str length-str-< length-str-<= length-str-> length-str->= length-vec let let_star list list-str list-vector listp log logand logior lognot logtest logtrunc logxor make-hash make-lazy-cons make-package make-random-state make-similar-hash make-string-byte-input-stream make-string-input-stream make-string-output-stream make-strlist-output-stream make-sym mapcar mapcar* maphash mappend mappend* match-fun match-regex match-str match-str-tree max memq memql memqual merge min mkstring mod multi-sort none not nreverse null num-chr num-str numberp oddp open-command open-directory open-file open-pipe open-process or orf packagep pop pprint print prog1 progn prop proper-listp push pushhash put-byte put-char put-line put-string qquote quasi quote rand random random-fixnum random-state-p range range* reduce-left reduce-right ref refset regex-compile regexp regsub rehome-sym remhash remove-if remove-if* remq remq* remql remql* remqual remqual* repeat replace replace-list replace-str replace-vec rest return return_from reverse rplaca rplacd s-ifblk s-ifchr s-ifdir s-ififo s-iflnk s-ifmt s-ifreg s-irgrp s-iroth s-irusr s-irwxg s-irwxo s-irwxu s-isgid s-isuid s-isvtx s-iwgrp s-iwoth s-iwusr s-ixgrp s-ixoth s-ixusr search-regex search-str search-str-tree second set set-diff set-hash-userdata sethash sin sixth size-vec some sort source-loc source-loc-str span-str splice split-str split-str-set sqrt stat string-cmp string-extend string-lt stringp sub sub-list sub-str sub-vec symbol-function symbol-name symbol-package symbolp tan third throw throwf time time-string-local time-string-utc time-usec tok-str tostring tostringp tree-find trim-str trunc typeof unquote upcase-str url-decode url-encode uw_protect vec-push vec-set-length vecref vector vector_list vectorp zerop

syn match txr_error "@[\t ]*[*]\?[\t ]*."
syn match txr_nested_error "[^\t `]\+" contained
syn match txr_hashbang "^#!.*"
syn match txr_atat "@[ \t]*@"
syn match txr_comment "@[ \t]*[#;].*"
syn match txr_contin "@[ \t]*\\$"
syn match txr_char "@[ \t]*\\."
syn match txr_char "@[ \t]*\\x[0-9A-Fa-f]\+"
syn match txr_char "@[ \t]*\\[0-9]\+"
syn match txr_variable "@[ \t]*[*]\?[ \t]*[A-Za-z_][A-Za-z0-9_]*"
syn match txr_metanum "@[0-9]\+"
syn match txr_regdir "@[ \t]*/\(\\/\|[^/]\|\\\n\)*/"

syn match txr_chr "#\\x[A-Fa-f0-9]\+" contained
syn match txr_chr "#\\o[0-9]\+" contained
syn match txr_chr "#\\[^ \t\nA-Za-z0-9_]" contained
syn match txr_chr "#\\[A-Za-z0-9_]\+" contained
syn match txr_regex "/\(\\/\|[^/]\|\\\n\)*/" contained
syn match txl_regex "#/\(\\/\|[^/]\|\\\n\)*/" contained
syn match txr_ncomment ";.*" contained

syn match txr_ident "[:@]\?[A-Za-z0-9!$%&*+\-<=>?\\^_~]\+" contained
syn match txl_ident "[:@]\?[A-Za-z0-9!$%&*+\-<=>?\\^_~/]\+" contained
syn match txl_ident ":" contained
syn match txr_num "[+-]\?[0-9]\+" contained

syn match txr_unquote "," contained
syn match txr_splice ",\*" contained
syn match txr_quote "'" contained
syn match txr_dot "\." contained
syn match txr_dotdot "\.\." contained

syn region txr_bracevar matchgroup=Delimiter start="@[ \t]*[*]\?{" matchgroup=Delimiter end="}" contains=txr_num,txr_ident,txr_string,txr_list,txr_bracket,txr_mlist,txr_mbracket,txr_regex,txr_quasilit,txr_chr,txr_nested_error

syn region txr_directive matchgroup=Delimiter start="@[ \t]*(" matchgroup=Delimiter end=")" contains=txr_keyword,txr_string,txr_list,txr_bracket,txr_mlist,txr_mbracket,txr_quasilit,txr_num,txl_ident,txl_regex,txr_string,txr_chr,txr_quote,txr_unquote,txr_splice,txr_dot,txr_dotdot,txr_ncomment,txr_nested_error

syn region txr_list contained matchgroup=Delimiter start="#\?H\?(" matchgroup=Delimiter end=")" contains=txl_keyword,txr_string,txl_regex,txr_num,txl_ident,txr_metanum,txr_list,txr_bracket,txr_mlist,txr_mbracket,txr_quasilit,txr_chr,txr_quote,txr_unquote,txr_splice,txr_dot,txr_dotdot,txr_ncomment,txr_nested_error

syn region txr_bracket contained matchgroup=Delimiter start="\[" matchgroup=Delimiter end="\]" contains=txl_keyword,txr_string,txl_regex,txr_num,txl_ident,txr_metanum,txr_list,txr_bracket,txr_mlist,txr_mbracket,txr_quasilit,txr_chr,txr_quote,txr_unquote,txr_splice,txr_dot,txr_dotdot,txr_ncomment,txr_nested_error

syn region txr_mlist contained matchgroup=Delimiter start="@(" matchgroup=Delimiter end=")" contains=txl_keyword,txr_string,txl_regex,txr_num,txl_ident,txr_metanum,txr_list,txr_bracket,txr_mlist,txr_mbracket,txr_quasilit,txr_chr,txr_quote,txr_unquote,txr_splice,txr_dot,txr_dotdot,txr_ncomment,txr_nested_error

syn region txr_mbracket matchgroup=Delimiter start="@\[" matchgroup=Delimiter end="\]" contains=txl_keyword,txr_string,txl_regex,txr_num,txl_ident,txr_metanum,txr_list,txr_bracket,txr_mlist,txr_mbracket,txr_quasilit,txr_chr,txr_quote,txr_unquote,txr_splice,txr_dot,txr_dotdot,txr_ncomment,txr_nested_error

syn region txr_string contained oneline start=+"+ skip=+\\\\\|\\"+ end=+"+
syn region txr_quasilit contained oneline start=+`+ skip=+\\\\\|\\`+ end=+`+ contains=txr_variable,txr_metanum,txr_bracevar,txr_mlist,txr_mbracket

hi def link txr_at Special
hi def link txr_atstar Special
hi def link txr_atat Special
hi def link txr_comment Comment
hi def link txr_ncomment Comment
hi def link txr_hashbang Preproc
hi def link txr_contin Preproc
hi def link txr_char String
hi def link txr_keyword Keyword
hi def link txl_keyword Type
hi def link txr_string String
hi def link txr_chr String
hi def link txr_quasilit String
hi def link txr_regex String
hi def link txl_regex String
hi def link txr_regdir String
hi def link txr_variable Identifier
hi def link txr_metanum Identifier
hi def link txr_ident Identifier
hi def link txl_ident Identifier
hi def link txr_num Number
hi def link txr_quote Special
hi def link txr_unquote Special
hi def link txr_splice Special
hi def link txr_dot Special
hi def link txr_dotdot Special
hi def link txr_error Error
hi def link txr_nested_error Error

let b:current_syntax = "lisp"
